{"name": "用户名正确，密码正确", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testCase.test_login.TestLogin object at 0x0000020FF6F650A0>\ntitle = '用户名正确，密码正确'\nbody = {'password': 'c607d58e3618832f937d80d500a6046c', 'username': 'th0198'}\nresp_exp = {'code': 20000, 'data': {'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1OTg1MTE1MDMsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.NcuSGdggtGJLx7BdxsB1OA2tEJcs94e4grvs6JZ2p_Q'}, 'flag': '松勤教育', 'msg': '成功', ...}\n\n    @pytest.mark.parametrize('title,body,resp_exp',\n                             get_excel_data(os.path.join(data_path,'Delivery_System_V1.5.xls'), '登录模块', 'Login', '标题', '请求参数', '响应预期结果'))\n    @allure.story('登录接口')\n    @allure.title('{title}')\n    def test_login(self, title, body, resp_exp):\n        \"\"\"登录的测试方法\"\"\"\n        # 1.执行请求发送\n        res = Login().login(body)\n        # 2.做断言\n        #assert res['msg'] == resp_exp['msg']\n>       ApiAssert.api_assert(res, '==', resp_exp, 'msg',msg='登录接口的断言')\n\ntest_login.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\apiAssert.py:40: in api_assert\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'common.apiAssert.ApiAssert'>\nresult = {'code': 9999, 'data': '', 'flag': '松勤教育', 'msg': '输入的密码错误!', ...}\ncondition = '=='\nexp_result = {'code': 20000, 'data': {'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1OTg1MTE1MDMsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.NcuSGdggtGJLx7BdxsB1OA2tEJcs94e4grvs6JZ2p_Q'}, 'flag': '松勤教育', 'msg': '成功', ...}\nassert_info = 'msg', msg = '登录接口的断言'\n\n    @classmethod  # 类方法\n    def api_assert(cls, result, condition, exp_result, assert_info, msg='断言操作'):\n        assert_detail= '实际结果:{0},预期结果:{1}'\n        \"\"\"\n        :param result:  实际返回数据\n        :param condition: 判断条件\n        :param exp_result: 预期的返回数据\n        :param assert_info: 断言的关键信息  code   msg\n        :param msg: 操作描述\n        :return: 断言结果\n        \"\"\"\n        try:\n            assert_type = {\n                \"==\": result[assert_info] == exp_result[assert_info],\n                \"!=\": result[assert_info] != exp_result[assert_info],\n                \"in\": result[assert_info] in exp_result[assert_info] if  isinstance(exp_result[assert_info],list) else  False ,\n            }\n            if condition in assert_type:  # 当前的断言条件在我们规划 的断言类型里\n>               assert assert_type[condition]\nE               AssertionError\n\n..\\common\\apiAssert.py:32: AssertionError"}, "description": "登录的测试方法", "attachments": [{"name": "log", "source": "9a56058f-2fd6-4f51-b5a8-9a999c92c208-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'用户名正确，密码正确'"}, {"name": "body", "value": "{'username': 'th0198', 'password': 'xintian'}"}, {"name": "resp_exp", "value": "{'code': 20000, 'data': {'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1OTg1MTE1MDMsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.NcuSGdggtGJLx7BdxsB1OA2tEJcs94e4grvs6JZ2p_Q'}, 'flag': '松勤教育', 'msg': '成功', 'success': True}"}], "start": 1705739585208, "stop": 1705739585276, "uuid": "dfc7594e-83c7-42a0-87b3-914c4a6e6bd0", "historyId": "1a4fe6dd9f63abbca1f5955c02e36969", "testCaseId": "50026e29e62a28fd03f4bd419465ebfb", "fullName": "testCase.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "登录模块"}, {"name": "story", "value": "登录接口"}, {"name": "epic", "value": "订餐系统"}, {"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-1LCDIJF"}, {"name": "thread", "value": "13400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_login"}]}