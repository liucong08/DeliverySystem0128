{"name": "订单搜索用例", "status": "broken", "statusDetails": {"message": "KeyError: 'code'", "trace": "self = <testCase.test_order_manage.Testorder object at 0x00000271F9E58940>\ntitle = '页数为空', req_body = {'limit': 1, 'page': ''}\nexp_resp = {'error': 'Internal Server Error'}\norder_init = <libs.orderManage.OrderAdmin object at 0x00000271F9E516A0>\n\n    @allure.story('订单搜索')#接口的名称\n    @allure.title('订单搜索用例')  # 用例的标题\n    @pytest.mark.order_search# 搜索订单标签\n    @pytest.mark.parametrize('title,req_body,exp_resp',get_excel_data(\"我的订单\",\"searchorder\"))\n    @allure.title(\"{title}\")\n    def test_search_order(self,title,req_body,exp_resp,order_init):\n        #1- 调用店铺列出接口\n        #店铺实例的创建必须要登录--需要一个店铺的实例---才能使用对应的方法\n        #调用对应的方法\n        res = order_init.query(req_body)\n        '''\n        如果断言不是一个属性，需要多个组合判断？\n        原理：assert   布尔表达式       多个条件使用and  or\n        '''\n        if res.get(\"code\"):\n>           self.api_assert(res,'=',exp_resp,assert_info='code')\n\ntest_order_manage.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\apiAssert.py:40: in api_assert\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'testCase.test_order_manage.Testorder'>\nresult = {'code': 20000, 'data': {'current': 1, 'pages': 0, 'records': [], 'size': 1, ...}, 'flag': '松勤教育', 'msg': '成功', ...}\ncondition = '=', exp_result = {'error': 'Internal Server Error'}\nassert_info = 'code', msg = '断言操作'\n\n    @classmethod  # 类方法\n    def api_assert(cls, result, condition, exp_result, assert_info, msg='断言操作'):\n        assert_detail= '实际结果:{0},预期结果:{1}'\n        \"\"\"\n        :param result:  实际返回数据\n        :param condition: 判断条件\n        :param exp_result: 预期的返回数据\n        :param assert_info: 断言的关键信息  code   msg\n        :param msg: 操作描述\n        :return: 断言结果\n        \"\"\"\n        try:\n            assert_type = {\n>               \"==\": result[assert_info] == exp_result[assert_info],\n                \"!=\": result[assert_info] != exp_result[assert_info],\n                \"in\": result[assert_info] in exp_result[assert_info] if  isinstance(exp_result[assert_info],list) else  False ,\n            }\nE           KeyError: 'code'\n\n..\\common\\apiAssert.py:27: KeyError"}, "attachments": [{"name": "log", "source": "e5a849b0-023a-40a8-94f2-7089ce2975fc-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'页数为空'"}, {"name": "req_body", "value": "{'page': '', 'limit': 1}"}, {"name": "exp_resp", "value": "{'error': 'Internal Server Error'}"}], "start": 1704606249109, "stop": 1704606249245, "uuid": "9f558ecf-eef9-4804-a9da-052e01d54ec0", "historyId": "400aa93901795481d24f84e4e784e185", "testCaseId": "3c6111216a2dca8659e1c2002053360a", "fullName": "testCase.test_order_manage.Testorder#test_search_order", "labels": [{"name": "feature", "value": "订单模块"}, {"name": "story", "value": "订单搜索"}, {"name": "epic", "value": "订餐系统"}, {"name": "tag", "value": "order_search"}, {"name": "tag", "value": "order"}, {"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_order_manage"}, {"name": "subSuite", "value": "Testorder"}, {"name": "host", "value": "DESKTOP-1LCDIJF"}, {"name": "thread", "value": "17660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_order_manage"}]}