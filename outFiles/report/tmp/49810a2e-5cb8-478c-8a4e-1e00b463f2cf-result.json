{"name": "页数为\"1\"，记录数为-\"1\"", "status": "broken", "statusDetails": {"message": "KeyError: 'code'", "trace": "self = <testCase.test_shop.TestShop object at 0x0000020FF7004880>\ntitle = '页数为\"1\"，记录数为-\"1\"', body = {'limit': -1, 'page': 1}\nexp_data = {'error': 'Internal Server Error'}\nshop_init = <libs.shop.Shop object at 0x0000020FF713AB50>\n\n    @pytest.mark.parametrize('title,body,exp_data',get_excel_data('我的商铺', 'listshopping'))\n    @allure.story('店铺的查询')\n    @allure.title('{title}')\n    @pytest.mark.shop_query\n    def test_shop_query(self, title, body, exp_data, shop_init):\n        shop = shop_init  #获取这个fixture返回值--是店铺的实例对象\n        res = shop.query(body)\n        #assert res['code'] == exp_data['code']\n>       ApiAssert.api_assert(res, '==', exp_data, assert_info='code',msg='店铺查询接口断言')\n\ntest_shop.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\apiAssert.py:40: in api_assert\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'common.apiAssert.ApiAssert'>\nresult = {'error': 'Internal Server Error', 'message': 'Page size must not be less than one!; nested exception is java.lang.IllegalArgumentException: Page size must not be less than one!', 'path': '//shopping/myShop', 'status': 500, ...}\ncondition = '==', exp_result = {'error': 'Internal Server Error'}\nassert_info = 'code', msg = '店铺查询接口断言'\n\n    @classmethod  # 类方法\n    def api_assert(cls, result, condition, exp_result, assert_info, msg='断言操作'):\n        assert_detail= '实际结果:{0},预期结果:{1}'\n        \"\"\"\n        :param result:  实际返回数据\n        :param condition: 判断条件\n        :param exp_result: 预期的返回数据\n        :param assert_info: 断言的关键信息  code   msg\n        :param msg: 操作描述\n        :return: 断言结果\n        \"\"\"\n        try:\n            assert_type = {\n>               \"==\": result[assert_info] == exp_result[assert_info],\n                \"!=\": result[assert_info] != exp_result[assert_info],\n                \"in\": result[assert_info] in exp_result[assert_info] if  isinstance(exp_result[assert_info],list) else  False ,\n            }\nE           KeyError: 'code'\n\n..\\common\\apiAssert.py:27: KeyError"}, "attachments": [{"name": "log", "source": "76d0644d-5233-4a1e-ad25-f64f24631b9a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'页数为\"1\"，记录数为-\"1\"'"}, {"name": "body", "value": "{'page': 1, 'limit': -1}"}, {"name": "exp_data", "value": "{'error': 'Internal Server Error'}"}], "start": 1705739587202, "stop": 1705739587298, "uuid": "c801a240-9ede-4852-9c8e-76b008ad40f9", "historyId": "678f2a2e7acff3692eeed2325ee55181", "testCaseId": "8115a05f0983cc4141f41c92bacc50d1", "fullName": "testCase.test_shop.TestShop#test_shop_query", "labels": [{"name": "feature", "value": "店铺模块"}, {"name": "story", "value": "店铺的查询"}, {"name": "epic", "value": "订餐系统"}, {"name": "tag", "value": "shop_query"}, {"name": "tag", "value": "shop"}, {"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_shop"}, {"name": "subSuite", "value": "TestShop"}, {"name": "host", "value": "DESKTOP-1LCDIJF"}, {"name": "thread", "value": "13400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_shop"}]}