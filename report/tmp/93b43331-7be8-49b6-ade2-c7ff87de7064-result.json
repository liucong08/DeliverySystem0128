{"name": "添加食品用例", "status": "broken", "statusDetails": {"message": "KeyError: 'code'", "trace": "self = <testCase.test_food_manage.TestFoodManage object at 0x000002CBDA320F60>\ntitle = '商铺id为空', req_body = {'restaurant_id': ''}\nexp_resp = {'error': 'Bad Request', 'status': 400}\nfood_init = <libs.foodManage.FoodManage object at 0x000002CBDA2E8550>\n\n    @allure.story('添加食品')  # 接口的名称\n    @allure.title('添加食品用例')  # 用例的标题\n    @pytest.mark.food_add  # 增加食品标签\n    @pytest.mark.parametrize('title,req_body,exp_resp', get_excel_data('食品管理', 'Addfood'))\n    @allure.title(\"{title}\")\n    def test_add_food(self, title, req_body, exp_resp, food_init):  # 传入食品初始化条件\n        res = food_init.add(req_body)\n        if res.get(\"code\"):\n>           self.api_assert(res, '=', exp_resp, assert_info='code')\n\ntest_food_manage.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\apiAssert.py:40: in api_assert\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'testCase.test_food_manage.TestFoodManage'>\nresult = {'code': 20000, 'data': '', 'flag': '松勤教育', 'msg': '成功', ...}\ncondition = '=', exp_result = {'error': 'Bad Request', 'status': 400}\nassert_info = 'code', msg = '断言操作'\n\n    @classmethod  # 类方法\n    def api_assert(cls, result, condition, exp_result, assert_info, msg='断言操作'):\n        assert_detail= '实际结果:{0},预期结果:{1}'\n        \"\"\"\n        :param result:  实际返回数据\n        :param condition: 判断条件\n        :param exp_result: 预期的返回数据\n        :param assert_info: 断言的关键信息  code   msg\n        :param msg: 操作描述\n        :return: 断言结果\n        \"\"\"\n        try:\n            assert_type = {\n>               \"==\": result[assert_info] == exp_result[assert_info],\n                \"!=\": result[assert_info] != exp_result[assert_info],\n                \"in\": result[assert_info] in exp_result[assert_info] if  isinstance(exp_result[assert_info],list) else  False ,\n            }\nE           KeyError: 'code'\n\n..\\common\\apiAssert.py:27: KeyError"}, "attachments": [{"name": "log", "source": "b39e55c8-7866-4872-95e0-f31f0e3ab9a8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'商铺id为空'"}, {"name": "req_body", "value": "{'restaurant_id': ''}"}, {"name": "exp_resp", "value": "{'error': 'Bad Request', 'status': 400}"}], "start": 1705753993400, "stop": 1705753993671, "uuid": "c4617458-d806-4c79-8bdf-cd8adbec5151", "historyId": "2c8f640324c4abc8094bbb6727d64f39", "testCaseId": "916bba83c5746428b122fc132c841980", "fullName": "testCase.test_food_manage.TestFoodManage#test_add_food", "labels": [{"name": "feature", "value": "食品模块"}, {"name": "epic", "value": "订餐系统"}, {"name": "story", "value": "添加食品"}, {"name": "tag", "value": "food_add"}, {"name": "tag", "value": "food"}, {"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_food_manage"}, {"name": "subSuite", "value": "TestFoodManage"}, {"name": "host", "value": "DESKTOP-1LCDIJF"}, {"name": "thread", "value": "18840-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_food_manage"}]}